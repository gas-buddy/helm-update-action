name: Automate Helm Chart Updates
description: A reusable GitHub Action to update Helm chart values with the latest ECR image tag.
inputs:
  account:
    description: "Environment account (e.g., stage or prod)."
    required: true
  repository-name:
    description: "ECR repository name (e.g., testing)."
    required: true
  aws-access-key-id:
    description: "AWS Access Key ID."
    required: true
  aws-secret-access-key:
    description: "AWS Secret Access Key."
    required: true
  aws-region:
    description: "AWS Region (e.g., us-east-1)."
    required: true
  helm-chart-path:
    description: "Path to the Helm chart values file."
    required: true
  github-token:
    description: "GitHub token for authentication."
    required: true
 

runs:
  using: "composite"
  steps:
    - name: Determine Account ID
      shell: bash
      run: |
        echo "Fetching AWS Account ID..."
        ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
        echo "Determined AWS Account ID: $ACCOUNT_ID"
        echo "ACCOUNT_ID=${ACCOUNT_ID}" >> $GITHUB_ENV

    - name: Helm Chart Update Workflow
      shell: bash
      run: |
        set -euo pipefail

        echo "Fetching the latest tag for repository: ${{ inputs.repository-name }}"
        LATEST_TAG=$(aws ecr describe-images \
                      --repository-name "${{ inputs.repository-name }}" \
                      --registry-id "${{ env.account-id }}" \
                      --region "${{ inputs.aws-region }}" \
                      --query 'sort_by(imageDetails, &imagePushedAt)[-1].imageTags[0]' \
                      --output text)

        if [ -z "$LATEST_TAG" ] || [ "$LATEST_TAG" == "null" ]; then
            echo "No valid tags found for the latest image in ECR." && exit 1
        fi

        echo "Fetched latest tag: ${LATEST_TAG}"

        echo "Authenticating Docker with ECR..."
        # aws ecr get-login-password --region "${{ inputs.aws-region }}" | docker login --username AWS --password-stdin "${{ inputs.aws-account-id }}.dkr.ecr.${{ inputs.aws-region }}.amazonaws.com"
        aws ecr get-login-password --region "${{ inputs.aws-region }}" | docker login --username AWS --password-stdin "${ACCOUNT_ID}.dkr.ecr.${{ inputs.aws-region }}.amazonaws.com"


        echo "Installing Helm..."
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        chmod +x get_helm.sh
        ./get_helm.sh

        echo "Debugging Helm values file (before):"
        cat "${{ inputs.helm-chart-path }}"

        echo "Updating Helm chart values..."
        sed -i "s/^  tag: .*/  tag: ${LATEST_TAG}/" "${{ inputs.helm-chart-path }}"
        helm lint $(dirname "${{ inputs.helm-chart-path }}") --values "${{ inputs.helm-chart-path }}"

        echo "Debugging Helm values file (after):"
        cat "${{ inputs.helm-chart-path }}"
      env:
        AWS_REGION: ${{ inputs.aws-region }}
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}