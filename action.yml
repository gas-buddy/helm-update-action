name: Automate Helm Chart Updates
description: A reusable GitHub Action to update Helm chart values with the latest ECR image tag.
inputs:
  account:
    description: "Environment account (e.g., stage or prod)."
    required: true
  repository-name:
    description: "ECR repository name (e.g., testing)."
    required: true
  aws-access-key-id:
    description: "AWS Access Key ID."
    required: true
  aws-secret-access-key:
    description: "AWS Secret Access Key."
    required: true
  aws-region:
    description: "AWS Region (e.g., us-east-1)."
    required: true
  aws-account-id:
    description: "AWS Account ID (e.g., 896521799855)."
    required: true
  helm-chart-path:
    description: "Path to the Helm chart values file."
    required: true
  github-token:
    description: "GitHub token for authentication."
    required: true

runs:
  using: "composite"
  steps:
    - name: Helm Chart Update Workflow
      shell: bash
      run: |
        set -euo pipefail

        echo "Fetching the latest tag for repository: ${{ inputs.repository-name }}"
        LATEST_TAG=$(aws ecr describe-images \
                      --repository-name "${{ inputs.repository-name }}" \
                      --registry-id "${{ inputs.aws-account-id }}" \
                      --region "${{ inputs.aws-region }}" \
                      --query 'sort_by(imageDetails, &imagePushedAt)[-1].imageTags[0]' \
                      --output text)

        if [ -z "$LATEST_TAG" ] || [ "$LATEST_TAG" == "null" ]; then
            echo "No valid tags found for the latest image in ECR." && exit 1
        fi

        echo "Fetched latest tag: ${LATEST_TAG}"

        echo "Authenticating Docker with ECR..."
        aws ecr get-login-password --region "${{ inputs.aws-region }}" | docker login --username AWS --password-stdin "${{ inputs.aws-account-id }}.dkr.ecr.${{ inputs.aws-region }}.amazonaws.com"

        # aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin "${{ env.account-id }}.dkr.ecr.us-east-1.amazonaws.com"


        echo "Installing Helm..."
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        chmod +x get_helm.sh
        ./get_helm.sh

        echo "Debugging Helm values file (before):"
        cat "${{ inputs.helm-chart-path }}"

        echo "Updating Helm chart values..."
        sed -i "s/^  tag: .*/  tag: ${LATEST_TAG}/" "${{ inputs.helm-chart-path }}"
        helm lint $(dirname "${{ inputs.helm-chart-path }}") --values "${{ inputs.helm-chart-path }}"

        echo "Debugging Helm values file (after):"
        cat "${{ inputs.helm-chart-path }}"
      env:
        AWS_REGION: ${{ inputs.aws-region }}
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}
    
    - name: Commit and Push Changes
      shell: bash
      run: |
        set -euo pipefail
        echo "Checking for changes in the Helm chart..."
        if git diff --quiet "${{ inputs.helm-chart-path }}"; then
            echo "No changes detected in the Helm chart. Exiting."
            exit 0
        fi
        git config user.name "GitHub Actions Bot"
        git config user.email "actions@github.com"
        BRANCH_NAME="update-helm-tag-$(date +%s)"
        git checkout -b "$BRANCH_NAME"
        echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
        git add "${{ inputs.helm-chart-path }}"
        git commit -m "Update Helm chart tag to ${LATEST_TAG}"
        git push origin "$BRANCH_NAME"
      env:
       GITHUB_TOKEN: ${{ inputs.github-token }}


    - name: Create Pull Request
      id: create_pr
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ env.BRANCH_NAME }}
        base: main
        title: "Update Helm Chart Tag to ${LATEST_TAG}"
        body: |
            This pull request updates the Helm chart to use the latest image tag: `${LATEST_TAG}`.
        labels: ["automation", "helm-update"]


    - name: Notify on Slack
      uses: slackapi/slack-github-action@v1.24.0
      with:
        slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
        channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
        custom-payload: |
          {
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ":rocket: A new PR has been created for updating the Helm chart:\n\n*<{{ steps.create_pr.outputs.pull-request-url }}|View Pull Request>*"
                }
              }
            ]
          }